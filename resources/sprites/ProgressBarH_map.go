package sprites

// Sprites in this directory of are type png
import _ "image/png"

var (
	// predefine this, so it can be used in al the generated
	// *ProgressBarH.go files
	ProgressBarH = make(map[string][]byte)

	// This allows me to reference images as, e.g.
	// sprites.ProgressBarH["foo"]
)
// Code generated by file2byteslice. DO NOT EDIT.
// (gofmt is fine after generating)


func init() { ProgressBarH["back_left"] = []byte("\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\t\x00\x00\x00\x12\b\x06\x00\x00\x00\x89\x80\xf4H\x00\x00\x00|IDATx\xdac`\xc0\x0e\x84\x81X\x1e\x88ՀX\x13]\x92\x1f\x88\xf5\x81\xd8\x18\r\xc3\x01\x0f\x92 H\xb72\x10+\x00\xb1\x1cL\x01'\xd4\x04m \x96\x06b)4\f\x06:P,\x85\x03\x83\x1d\xa9\x87\xc3\x04\xb8\"\x90\x0fd\xf1(\x00+\xd2$\xa0\x00\xacH\x81\x18ERTS$L\x8c\"nb\x141\x02\xb1\x04!E \xc0A\x8c\"\x10`\x03bQB\x8a`V\x8b\x12R\x84\x9c*\xc4`\x8a\x00\x82i\x0e\xc9\\}\xbb\x95\x00\x00\x00-tEXtSoftware\x00by.blooddy.crypto.image.PNG24Encoder\xa8\x06\u007f\xee\x00\x00\x00\x00IEND\xaeB`\x82") }// Code generated by file2byteslice. DO NOT EDIT.
// (gofmt is fine after generating)


func init() { ProgressBarH["back_mid"] = []byte("\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x12\x00\x00\x00\x12\b\x06\x00\x00\x00VΎW\x00\x00\x00\x1fIDATx\xdac```0\xa6\x12\xa6\x9eART£\x06\x8d\x1a4jШA\x94`\x00R\xb7$m\x95\xd7v\x9e\x00\x00\x00-tEXtSoftware\x00by.blooddy.crypto.image.PNG24Encoder\xa8\x06\u007f\xee\x00\x00\x00\x00IEND\xaeB`\x82") }// Code generated by file2byteslice. DO NOT EDIT.
// (gofmt is fine after generating)


func init() { ProgressBarH["back_right"] = []byte("\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\t\x00\x00\x00\x12\b\x06\x00\x00\x00\x89\x80\xf4H\x00\x00\x00xIDATxڭ\xd1\xc1\n\x80 \x10E\xd1i\x13EA\v1¨\x84 \x88\xa2\x16\xfd\xff\xbf\xf5\x82\x11Drl\x91pv\x97\x91Q\"\xa2\x15\x16\x98@Q\xe4\\\x81\x13\x9a0\x1a\xc1\xc2\xccS]\\\xfb\x91\t\xf4\xb0\xf1\xc42\x169;\x13\xa3g\xe2\xe1\x961\x82\x817\x17#\xc3\xcb$#\xfb%2\xbfE\xeaKT\xa5\xa2\x0e\xb2TTH/\xae!\x97>X\xbb+ޢ\xd6\xffu\xff\xdc\xc4y\x0e\xc9\r\x14q\xf0\x00\x00\x00-tEXtSoftware\x00by.blooddy.crypto.image.PNG24Encoder\xa8\x06\u007f\xee\x00\x00\x00\x00IEND\xaeB`\x82") }// Code generated by file2byteslice. DO NOT EDIT.
// (gofmt is fine after generating)


func init() { ProgressBarH["green_left"] = []byte("\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\t\x00\x00\x00\x12\b\x06\x00\x00\x00\x89\x80\xf4H\x00\x00\x00\xe3IDATx\xdac`\xc0\x02\xa2י\xc5ǭ\xb7\x9a\x1f\xbb\xd6b\u007f\xdcz\xcb\xf3(\x92q\xeb\xcc\xfd\x81\x92\xef\xe37Z\xfdG\xc6p\x05\x91\xeb,\xeda\x82\x99{\x9c\xffW\x9c\v\xfc_{%\xec\u007f\xc3\xf5\b\x88\xa2\xf0\xb5\x86\xfa0\x13\xcaN\xfb\xff\xefx\x90\x80\x82!֬\xb7\xb8\x0fR\x90w\xc8\x03C\x01X\x11ȑ \x05i;\x1d\xb1*\x00+\x02\xf9\x00\xa4\xa8\xfab\bnE0Ƕލ%\xac\b&P|\xd6\x1b\x03\x13\xa7\b\xe6\xf5\xa6[\xd1`Ee\x17\xfc0\x15Ů7_\x0fR\x04\n<\x90\xa2\xc6[\x91\x98\x8a\xb0\x05A\xcd\xd5\x10TE.\xab\x94\xf8\xb1\x85vÍ\x88\xff%\xe7| \x8a\xd0\xe3\xad\xf8\x84/\xf6h\x81)\x04%\v\x90\xc2\xec\xfd\xae\xe0\xc8\xc5P\x04\x02\x10\xab!\n\xb1&\x15\xccD\a\x89t\x10\x06\x00\xae\xe5S\x0e5)\x05\xaa\x00\x00\x00-tEXtSoftware\x00by.blooddy.crypto.image.PNG24Encoder\xa8\x06\u007f\xee\x00\x00\x00\x00IEND\xaeB`\x82") }// Code generated by file2byteslice. DO NOT EDIT.
// (gofmt is fine after generating)


func init() { ProgressBarH["green_mid"] = []byte("\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x12\x00\x00\x00\x12\b\x06\x00\x00\x00VΎW\x00\x00\x00/IDATx\xdac\x88\xdfh\xf5\x9f\x1a\x98\x81j\x06u<H\xf8O\r<j\x10=\r*>\xeb\xfd\x9f\x1ax\xd4 z\x1a4\xf8\xd2Ѡ+\x8f\x00\xea\x9cFޯl\x8c\xde\x00\x00\x00-tEXtSoftware\x00by.blooddy.crypto.image.PNG24Encoder\xa8\x06\u007f\xee\x00\x00\x00\x00IEND\xaeB`\x82") }// Code generated by file2byteslice. DO NOT EDIT.
// (gofmt is fine after generating)


func init() { ProgressBarH["green_right"] = []byte("\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\t\x00\x00\x00\x12\b\x06\x00\x00\x00\x89\x80\xf4H\x00\x00\x00\xdcIDATx\xdac\x88[oy>v\xad\xc5\xfe\xb8\xf5V\xf3\xa3י\xc53`\x03\xf1\x1b\xad\xfe#c\xa0\xe2\xf7q\xeb\xcc\xfdQ\x145\\\x8f\xf8_{%\xec\u007fŹ\xc0\xff\x99{\x9c\xe1\x8a#\xd7Y\xda\xc3\x15u<H\xf8\x8f\x8c\xcbN\xfb\xc3M\f_k\xa8\x8fU\x11\b\xe7\x1d\xf2\x80*\xb4\xb8\x8fS\x11\b\xa7\xedt\x04+\x04{\x06\x97\xa2\xea\x8b!`E \x9f\xe3T\xd4z7\x16\xee\t\x86\xe2\xb3\xde\xff\xd11L!e\x8a\xca.\xf8\x81\x154݊\x86\a\x05\x86\xa2\xc6[\x91`E\xa0\xc0\x05;|\xbd\xf9z\x14E5WC\xb0\a\x01H\xb2\xe4\x9c\xcf\xff\x86\x1b\x11XC\xdde\x95\x12?F\x10\x14\x9f\xf0Ō?\x98$(\x92\xb3\xf7\xbbBM\xb0<\x8f\x12\xc1\x98I\xc5\xf2<\xd8\nl\xe9\t\x14\x99\xb8\x12\x1d\x00:\xfeS\x0e\x95\xd1\xd2\b\x00\x00\x00-tEXtSoftware\x00by.blooddy.crypto.image.PNG24Encoder\xa8\x06\u007f\xee\x00\x00\x00\x00IEND\xaeB`\x82") }
